name: UBET Contracts
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

env:
  # https://github.com/foundry-rs/foundry/releases/tag/nightly-3ff3d0562215bca620e07c5c4c154eec8da0f04b
  # 2023-10-02 release of foundry
  FOUNDRY_VERSION: nightly-3ff3d0562215bca620e07c5c4c154eec8da0f04b
  SLITHER_VERSION: 0.11.0
  BUN_VERSION: 1.1.30

# When pushing new commits to a pull request, automatically cancel the previous
# workflow run. This reduces wasted compute power for CI that we pay for
concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  test-coverage:
    name: Foundry Coverage
    runs-on:
      group: large-runners
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.INTERNAL_REPO_ACCESS_TOKEN }}

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: ${{ env.FOUNDRY_VERSION }}

      - name: Cache Foundry Compilers
        uses: actions/cache@v4
        with:
          path: ~/.svm
          key: foundry-solc-cache-${{ runner.os }}

      - name: Install dependencies
        run: |
          sudo apt install lcov

      - name: Create coverage report
        run: |
          ./tools/run_coverage.sh

  test-slither:
    name: Slither static analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.INTERNAL_REPO_ACCESS_TOKEN }}

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: ${{ env.FOUNDRY_VERSION }}

      - name: Cache Foundry Compilers
        uses: actions/cache@v4
        with:
          path: ~/.svm
          key: foundry-solc-cache-${{ runner.os }}

      - name: Install dependencies
        run: |
          python -m pip install slither-analyzer==${{ env.SLITHER_VERSION }}

      - name: Run slither
        run: |
          ./tools/run_slither.sh >> $GITHUB_STEP_SUMMARY

  test-foundry:
    name: Foundry project
    runs-on:
      group: large-runners
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.INTERNAL_REPO_ACCESS_TOKEN }}
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: ${{ env.FOUNDRY_VERSION }}

      - name: Run forge
        run: |
          forge fmt --check
          ./tools/run_tests.sh

      - name: Run TS checks
        run: |
          bun install --frozen-lockfile
          ./tools/run_lint.sh

      - name: Post Contract Size Report to PR
        if: github.event_name == 'pull_request' && (! startsWith(github.head_ref, 'dependabot/'))
        uses: mshick/add-pr-comment@v2
        with:
          message-id: contract-size-report
          message-path: reports/contract-size-report.md
          message-failure: Contract Size Report Failed!

  test-typescript:
    name: Typescript Scripts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.INTERNAL_REPO_ACCESS_TOKEN }}
      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: ${{ env.FOUNDRY_VERSION }}

      - name: Install dependencies
        run: |
          bun install --frozen-lockfile

      - name: Run Checks
        working-directory: tools/typescript
        run: |
          bun run tsc
          bun run lint:format
          bun run lint:ts

